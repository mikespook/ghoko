#!/bin/bash

### BEGIN INIT INFO
# Provides:	  ghoko
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the ghoko server
# Description:       starts ghoko using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=ghoko
DESC="GHoKo"

if [ -f /etc/$NAME.conf ]; then  
	CONFIG=/etc/$NAME.conf
elif [ -f $NAME.conf ]; then
	CONFIG=$NAME.conf
else
	echo '[ERROR] missing configration.'
	exit 1
fi

. $CONFIG

DAEMON=/usr/bin/$NAME

test -x $DAEMON
if [ $? -ne 0 ] ; then 
	echo '[ERROR] missing binary.'
	exit 1
fi

set -e

. /lib/lsb/init-functions



start_ghoko() {
	checkstart
	nohup $DAEMON -addr="$ADDR" -log="$LOG" -log-level="$LOG_LEVEL" \
		-script="$SCRIPT" -secret="$SECRET" -pid="$PID" >> $LOG 2>&1 &
    while [ ! -f $PID ] ; do
        sleep 0.1
    done
	cat $PID
}

stop_ghoko() {
	local p=`findproc|awk '{print $2;}'`
	if [ -n "$p" ]; then
		kill -INT $p
	fi
	wait2stop
	echo $p
}

findproc() {
	ps -AF |grep $DAEMON|grep $ADDR
}

checkstart() {
	local l=`findproc|wc -l`
	if [ $l -ne 0 ]; then
		echo "[ERROR] $DESC already started."
		exit 1
	fi
}

wait2stop() {
    local l=`findproc|wc -l`
    while [ $l -ne 0 ] ; do
        sleep 0.1
        l=`findproc|wc -l`
    done
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		p=`start_ghoko`
		echo "$DESC started ($p)."
		;;
	stop)
		echo -n "Stopping $DESC: "
		p=`stop_ghoko`
		echo "$DESC stoped ($p)."
		;;
	restart)
		echo -n "Restarting $DESC: "
		old=`stop_ghoko`
		new=`start_ghoko`
		echo "$DESC restarted ($old => $new)."
		;;
	*)
		echo "Usage: $NAME {start|stop|restart}" >&2
		exit 1
		;;
esac

exit 0
